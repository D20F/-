(window.webpackJsonp=window.webpackJsonp||[]).push([[7],{356:function(t,e,o){"use strict";o.r(e);var v=o(43),a=Object(v.a)({},(function(){var t=this,e=t.$createElement,o=t._self._c||e;return o("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[o("h1",{attrs:{id:"面试模拟"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#面试模拟"}},[t._v("#")]),t._v(" 面试模拟")]),t._v(" "),o("h2",{attrs:{id:"什么是虚拟dom，如何实现的"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#什么是虚拟dom，如何实现的"}},[t._v("#")]),t._v(" 什么是虚拟dom，如何实现的")]),t._v(" "),o("p",[t._v("虚拟dom是用js对象来表示真实的dom结构")]),t._v(" "),o("p",[t._v("生成一棵虚拟DOM树：一棵表示当前的DOM结构，另一棵在状态变更将要重新渲染时生成。通过比较这两棵树的差异，决定需要修改那些DOM结构，以及如何修改。")]),t._v(" "),o("h2",{attrs:{id:"写出常用的dom-bom-window-方法-每个至少五个"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#写出常用的dom-bom-window-方法-每个至少五个"}},[t._v("#")]),t._v(" 写出常用的dom bom window 方法 每个至少五个")]),t._v(" "),o("p",[o("span",{staticStyle:{color:"green"}},[t._v("BOM是浏览器对象模型,一共有6个")])]),t._v(" "),o("ol",[o("li",[t._v("window对象 ，是JS的最顶层对象，其他的BOM对象都是window对象的属性")]),t._v(" "),o("li",[t._v("document对象，文档对象")]),t._v(" "),o("li",[t._v("location对象，浏览器当前URL信息")]),t._v(" "),o("li",[t._v("navigator对象，浏览器本身信息")]),t._v(" "),o("li",[t._v("screen对象，客户端屏幕信息")]),t._v(" "),o("li",[t._v("history对象，浏览器访问历史信息")])]),t._v(" "),o("p",[o("span",{staticStyle:{color:"green"}},[t._v("一般可以直接调用的方法,都是window方法,如")])]),t._v(" "),o("ol",[o("li",[t._v("getElementById() querySelector() querySelectorAll() getElementsByClassName 获取dom结构的")]),t._v(" "),o("li",[t._v("document.open() close() write()  打开写入流 关闭写入流 写入")])]),t._v(" "),o("p",[o("span",{staticStyle:{color:"green"}},[t._v("一般可以直接调用的方法,都是window方法,如")])]),t._v(" "),o("ol",[o("li",[t._v("window.console.log() 最常用的log就是window对象啊 \\(•ิ_•ิ\\)(/•ิ_•ิ)/")]),t._v(" "),o("li",[t._v("window.open() 打开一个新的网页")]),t._v(" "),o("li",[t._v("window.alert() window.confirm() 两个提示的也是winodw对象")]),t._v(" "),o("li",[t._v("window.setTimeout() window.clearTimeout()")]),t._v(" "),o("li",[t._v("window.setInterval() window.clearInterval() 定时器都是window对象")])]),t._v(" "),o("h2",{attrs:{id:"react创建组件的几种方式，如何创建"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#react创建组件的几种方式，如何创建"}},[t._v("#")]),t._v(" react创建组件的几种方式，如何创建")]),t._v(" "),o("ol",[o("li",[t._v("类组件 用extends React.Component 继承创建。 或者用React.createClass来创建")]),t._v(" "),o("li",[t._v("函数式组件 就是一个函数")]),t._v(" "),o("li",[t._v("高阶组件 就是用组件当做参数的组件")])]),t._v(" "),o("h2",{attrs:{id:"doctype干嘛的"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#doctype干嘛的"}},[t._v("#")]),t._v(" DOCTYPE干嘛的")]),t._v(" "),o("p",[t._v("用来规定网页文档类型的 一共2种模式")]),t._v(" "),o("ol",[o("li",[t._v("混杂模式")]),t._v(" "),o("li",[t._v("标准模式")])]),t._v(" "),o("h2",{attrs:{id:"vue双向绑定"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#vue双向绑定"}},[t._v("#")]),t._v(" vue双向绑定")]),t._v(" "),o("p",[t._v("使用Object.defineProperty的来实现\n使用Object.defineProperty的来实现,get,set来劫持数据,")])])}),[],!1,null,null,null);e.default=a.exports}}]);